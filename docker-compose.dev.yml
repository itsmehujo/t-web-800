version: "3"
name: "tweb800"
services: 
  postgres:
    image: postgres:alpine3.17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=symfonyweb800
      - POSTGRES_PASSWORD=postgresql__password
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./db:/data
    networks:
      - default
  
  # main symfony app
  main_app:
    build: 
      context: ./backend
      target: development
      args:
        - APP_NAME=main_app
    tty: true
    ports:
      - "${MAIN_BACKEND_PORT}:${MAIN_BACKEND_PORT}" #activities
    links : 
      - postgres
    volumes:
      - ./backend:/code
    working_dir: /code/main_app
    
  # server
  caddy:
    image: caddy:2.6.4-alpine
    volumes:
      - ./backend/misc/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
        # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
        # HTTP/3
      - target: 443
        published: 443
        protocol: udp
    depends_on:
      - main_app
      - activities
      - hotels
      - maps
      - restaurants
    environment:
      MAIN_BACKEND_PORT: ${MAIN_BACKEND_PORT}
      ACTIVITIES_BACKEND_PORT: ${ACTIVITIES_BACKEND_PORT}
      HOTELS_BACKEND_PORT: ${HOTELS_BACKEND_PORT}
      MAPS_BACKEND_PORT: ${MAPS_BACKEND_PORT}
      RESTAURANTS_BACKEND_PORT: ${RESTAURANTS_BACKEND_PORT}
    restart: unless-stopped


  # MICROSERVICES
  activities:
    build: 
      context: ./backend
      target: development
      args:
        - APP_NAME=activities
    tty: true
    ports:
      - "${ACTIVITIES_BACKEND_PORT}:${ACTIVITIES_BACKEND_PORT}" #activities
    links : 
      - postgres
    volumes:
      - ./backend:/code
    working_dir: /code/activities
    

  hotels:
    build: 
      context: ./backend
      target: development
      args:
        - APP_NAME=hotels
    tty: true
    ports:
      - "${HOTELS_BACKEND_PORT}:${HOTELS_BACKEND_PORT}" #hotels
    links : 
      - postgres
    volumes:
      - ./backend:/code
    working_dir: /code/hotels
    

  maps:
    build: 
      context: ./backend
      target: development
      args:
        - APP_NAME=maps
    tty: true
    ports:
      - "${MAPS_BACKEND_PORT}:${MAPS_BACKEND_PORT}" #maps
    links : 
      - postgres
    volumes:
      - ./backend:/code
    working_dir: /code/maps
    

  restaurants:
    build: 
      context: ./backend
      target: development
      args:
        - APP_NAME=restaurants
    tty: true
    ports:
      - "${RESTAURANTS_BACKEND_PORT}:${RESTAURANTS_BACKEND_PORT}" #restaurants
    links : 
      - postgres
    volumes:
      - ./backend:/code
    working_dir: /code/restaurants
    


networks:
  default: {}
  
volumes:
  postgres:
    driver: local
  storage:
    driver: local
  caddy_data:
  caddy_config: